worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # 定義上游服務 (Docker 容器)
    upstream frontend_app {
        # 在 Docker Compose 網路中，服務名稱可以直接作為主機名
        # 這裡使用 docker-compose.yml 中定義的服務名稱
        server frontend:80;
    }

    upstream backend_api {
        # 這裡使用 docker-compose.yml 中定義的服務名稱
        server backend:5000;
    }

    server {
        listen 80; # Nginx 監聽主機的 80 埠
        server_name localhost; # 或您的域名

        # 路由到前端應用程式
        location / {
            proxy_pass http://frontend_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 路由到後端 API
        location /api/ {
            proxy_pass http://backend_api/; # 注意這裡的斜線，確保路徑正確轉發
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 如果有靜態檔案需要 Nginx 直接服務，可以在這裡配置
        # 例如：
        # location /static/ {
        #     alias /usr/share/nginx/html/static/; # 假設靜態檔案在 Nginx 容器內的此路徑
        #     expires 30d;
        #     add_header Cache-Control "public, no-transform";
        # }
    }
}
